name: Test, Build, and Deploy

on:
  push:
    branches:
      - development  # Se activa cuando hay un push a la rama 'development'

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_USER: ${{ secrets.DB_USER }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm install

      - name: Run tests
        env:
          NODE_ENV: test
        run: |
          npm test

  build_and_deploy:
    runs-on: ubuntu-latest
    needs: test
    if: success()  # Solo ejecuta este paso si los tests fueron exitosos

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
        with:
          version: latest

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Paso 1: Construir la imagen Docker
      - name: Build Docker image
        run: |
          docker-compose -f "docker-compose.yml" up -d --build

      # Paso 2: Subir la imagen Docker al Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker-compose push

      # Paso 3: Desplegar en Render
      - name: Trigger Render Deploy
        run: |
          curl -X GET "https://api.render.com/deploy/srv-ctg7dld2ng1s73bdfnng?key=${{ secrets.RENDER_API_KEY }}"
