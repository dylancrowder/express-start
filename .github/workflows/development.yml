name: Test, Build, and Deploy

on:
  push:
    branches:
      - development  

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_USER: ${{ secrets.DB_USER }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm install

      - name: Run tests
        env:
          NODE_ENV: development
        run: |
          npm test

  build_and_deploy:
    runs-on: ubuntu-latest
    needs: test
    if: success()  

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Instalar Docker y Docker Compose
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
        with:
          version: latest

      - name: Install Docker Compose
        run: |
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            docker-compose --version  # Verifica que Docker Compose est√° correctamente instalado

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Construir la imagen Docker
      - name: Build Docker image
        run: |
          docker build \
            --build-arg DB_HOST=${{ secrets.DB_HOST }} \
            --build-arg DB_NAME=${{ secrets.DB_NAME }} \
            --build-arg DB_USER=${{ secrets.DB_USER }} \
            --build-arg DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -t dylanrojo/express-start-app:latest .

      # Subir la imagen Docker a Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push dylanrojo/express-start-app:latest

      # Desplegar en Render
      - name: Trigger Render Deploy
        run: |
          curl -X GET "https://api.render.com/deploy/srv-ctg7dld2ng1s73bdfnng?key=qat_eK9zyCQ"
